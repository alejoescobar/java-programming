#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.params=current\ coldestSoFar
comment1.target=org.apache.commons.csv.CSVRecord\ getColdestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment10.params=
comment10.target=void\ testLowestHumidityInManyFiles()
comment11.params=parser\ data
comment11.target=double\ averageDataInFile(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment12.params=
comment12.target=void\ testAverageDataInFile()
comment2.params=current\ coldestSoFar\ currentFileName\ coldestFileName
comment2.target=java.lang.String\ getColdestOfTwoFileName(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ testColdestInDay()
comment4.params=
comment4.target=java.lang.String\ fileWithColdestTemperature()
comment5.params=
comment5.target=void\ testFileWithColdestTemperature()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=current\ lowestHumiditySoFar
comment7.target=org.apache.commons.csv.CSVRecord\ getLowestHumidityOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment8.params=
comment8.target=void\ testLowestHumidityInFile()
comment9.params=
comment9.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
numComments=13
